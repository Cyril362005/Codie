version: '3.8'

services:
  # Database Service
  db:
    image: postgres:15-alpine
    container_name: codie_db
    environment:
      - POSTGRES_USER=codie
      - POSTGRES_PASSWORD=codie
      - POSTGRES_DB=codie_dev
      - PGUSER=codie
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codie -d codie_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway (not fully utilized yet)
  api_gateway:
    container_name: codie-api_gateway-1
    build:
      context: .
      dockerfile: api_gateway/Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./.env # Load variables from .env file
    depends_on:
      - analysis_orchestrator
      - chat_service

  # Analysis Orchestrator - The "brain"
  analysis_orchestrator:
    container_name: codie-analysis_orchestrator-1
    build:
      context: .
      dockerfile: analysis_orchestrator/Dockerfile
    ports:
      - "8001:8000"
    env_file:
      - ./.env # Load Snyk and other tokens from .env
    depends_on:
      - db
      - repo_analysis
      - dynamic_testing
      - style_learner
      - chat_service

  # Static code analysis service
  repo_analysis:
    container_name: codie-repo_analysis-1
    build:
      context: .
      dockerfile: repo_analysis/Dockerfile
    env_file:
      - ./.env

  # Dynamic testing and code coverage service
  dynamic_testing:
    container_name: codie-dynamic_testing-1
    build:
      context: .
      dockerfile: dynamic_testing/Dockerfile
    # Mounting docker.sock allows this service to run Docker commands
    # WARNING: This is a security risk. Consider using Docker-in-Docker or a more secure approach
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Read-only access
    security_opt:
      - no-new-privileges:true
    env_file:
      - ./.env

  # Code style profile learner
  style_learner:
    container_name: codie-style_learner-1
    build:
      context: .
      dockerfile: style_learner/Dockerfile
    env_file:
      - ./.env

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: codie-redis-1
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Authentication service
  auth_service:
    container_name: codie-auth_service-1
    build:
      context: .
      dockerfile: auth_service/Dockerfile
    ports:
      - "8003:8000"
    env_file:
      - ./.env # Load JWT secret and database URL from .env
    depends_on:
      - db

  # Cache service
  cache_service:
    container_name: codie-cache_service-1
    build:
      context: .
      dockerfile: cache_service/Dockerfile
    ports:
      - "8004:8000"
    env_file:
      - ./.env # Load Redis configuration from .env
    depends_on:
      - redis

  # Monitoring service
  monitoring_service:
    container_name: codie-monitoring_service-1
    build:
      context: .
      dockerfile: monitoring_service/Dockerfile
    ports:
      - "8005:8000"
    env_file:
      - ./.env
    depends_on:
      - analysis_orchestrator
      - auth_service
      - chat_service
      - cache_service

  # Real-time chat and AI integration service
  chat_service:
    container_name: codie-chat_service-1
    build:
      context: .
      dockerfile: chat_service/Dockerfile
    ports:
      - "8002:8000"
    env_file:
      - ./.env # Load Hugging Face token from .env
    depends_on:
      - db

  # AI Service - Machine Learning and Advanced Analysis
  ai_service:
    container_name: codie-ai_service-1
    build:
      context: .
      dockerfile: ai_service/Dockerfile
    ports:
      - "8006:8006"
    env_file:
      - ./.env
    volumes:
      - ai_models:/app/models
    depends_on:
      - redis

volumes:
  postgres_data:
  redis_data:
  ai_models: