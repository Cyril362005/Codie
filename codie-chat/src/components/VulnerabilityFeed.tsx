import React, { useState } from 'react'

interface Vuln {
  id: number
  name: string
  severity: 'low' | 'medium' | 'high'
}

const sampleData: Vuln[] = [
  { id: 1, name: 'SQL Injection', severity: 'high' },
  { id: 2, name: 'XSS Attack', severity: 'medium' },
  { id: 3, name: 'Deprecation', severity: 'low' },
]

const colorMap = {
  low: 'text-green-400',
  medium: 'text-amber-400',
  high: 'text-red-400',
}

const VulnerabilityFeed: React.FC = () => {
  const [selected, setSelected] = useState<number[]>([])
  const [sortBy, setSortBy] = useState<'name' | 'severity'>('name')
  const [direction, setDirection] = useState<'asc' | 'desc'>('asc')

  const sorted = [...sampleData].sort((a, b) => {
    const fieldA = a[sortBy]
    const fieldB = b[sortBy]
    if (fieldA < fieldB) return direction === 'asc' ? -1 : 1
    if (fieldA > fieldB) return direction === 'asc' ? 1 : -1
    return 0
  })

  const toggle = (id: number) => {
    setSelected((s) => (s.includes(id) ? s.filter((x) => x !== id) : [...s, id]))
  }

  return (
    <table className="min-w-full text-sm">
      <thead className="text-left">
        <tr>
          <th className="px-2"></th>
          <th className="px-2 cursor-pointer" onClick={() => {
            setSortBy('name');
            setDirection(direction === 'asc' ? 'desc' : 'asc');
          }}>Name {sortBy === 'name' ? (direction === 'asc' ? '▲' : '▼') : ''}</th>
          <th className="px-2 cursor-pointer" onClick={() => {
            setSortBy('severity');
            setDirection(direction === 'asc' ? 'desc' : 'asc');
          }}>Severity {sortBy === 'severity' ? (direction === 'asc' ? '▲' : '▼') : ''}</th>
        </tr>
      </thead>
      <tbody>
        {sorted.map((v) => (
          <tr key={v.id} className="border-t border-white/10">
            <td className="px-2">
              <input 
                type="checkbox" 
                checked={selected.includes(v.id)} 
                onChange={() => toggle(v.id)}
                aria-label={`Select vulnerability ${v.name}`}
              />
            </td>
            <td className="px-2">{v.name}</td>
            <td className={`px-2 ${colorMap[v.severity]}`}>{v.severity}</td>
          </tr>
        ))}
      </tbody>
    </table>
  )
}

export default VulnerabilityFeed
